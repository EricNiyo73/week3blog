{"version":3,"file":"auth.js","names":["router","Router","post","req","res","salt","bcrypt","genSalt","hashedpassword","hash","body","password","User","find","email","exec","then","user","length","status","json","message","newUser","username","save","result","token","jwt","sign","id","_id","process","env","JWT_SECRET","expiresIn","JWT_EXPIRES_IN","data","catch","error","findOne","validated","compare","err"],"sources":["../../../src/routes/auth.js"],"sourcesContent":["// const router = require(\"express\").Router();\nimport  Router  from 'express';\nconst router = Router();\nimport User from \"../models/User.js\";\nimport bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\n//REGISTER\n\nrouter.post(\"/register\", async (req, res) => {\n \n    const salt = await bcrypt.genSalt(10);\n    const hashedpassword = await bcrypt.hash(req.body.password,salt);\n  \n    User.find({email: req.body.email})\n        .exec()\n        .then(user => {\n        if(user.length >= 1){\n        return res.status(409).json({\n         message: 'Email already exists'\n        });\n        } else {\n                // Create a user\n         const newUser = new User({\n        username: req.body.username,  \n         email: req.body.email, \n        password: hashedpassword\n        });\n                \n        newUser.save()\n        .then(result => {\n        const token = jwt.sign({id: result._id}, process.env.JWT_SECRET, { expiresIn: process.env.JWT_EXPIRES_IN });\n        return res.status(201).json({\n        status: 'successfully',\n        token,\n         data: {\n        user: result\n        }\n        });\n        })\n        .catch(error => {\n        return res.status(500).json({\n        error\n        });\n        });\n        }\n        })\n        .catch(error => {\n            res.status(500).json({\n                error\n            });\n        });\n  });\n\n//LOGIN\nrouter.post(\"/login\", async (req, res) => {\n  try {\n    const user = await User.findOne({ username: req.body.username });\n    !user && res.status(400).json(\"Wrong credentials!\");\n\n    const validated = await bcrypt.compare(req.body.password, user.password);\n    !validated && res.status(400).json(\"Wrong credentials!\");\n\n    // const { password, ...others } = user._doc;\n   return res.status(200).json({\n      message:\"logged successfully\"\n    });\n  } catch (err) {\n   return res.status(500).json(err);\n  }\n});\n\nexport default router;\n"],"mappings":"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"}