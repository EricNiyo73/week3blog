{"version":3,"file":"posts.js","names":["router","Router","app","express","use","static","path","join","process","cwd","bodyParser","urlencoded","extended","json","cloudinary","config","cloud_name","api_key","api_secret","upload","multer","storage","diskStorage","fileFilter","req","file","cb","ext","extname","originalname","Error","post","authentication","single","res","result","uploader","newPost","Post","photo","secure_url","title","body","desc","username","categories","savePost","save","status","error","put","findById","params","id","updatedPost","findByIdAndUpdate","$set","new","err","delete","get","query","user","catName","cat","posts","find","$in"],"sources":["../../../src/routes/posts.js"],"sourcesContent":["// import router from \"express\".Router();\nimport  Router  from 'express';\nconst router = Router();\nimport bodyParser from 'body-parser';\nimport Post from \"../models/Post.js\";\nimport User from \"../models/User.js\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport express from \"express\";\nimport authorizeUser from \"../middlewires/middleware.js\"\nimport authentication from \"../middlewires/mustHveAccount.js\";\nconst app = express();\nrouter.use(\"/images\", express.static(path.join(process.cwd(), \"/images\")));\nrouter.use(bodyParser.urlencoded({ extended: true }))\nrouter.use(bodyParser.json());\n//CREATE POST\n// const storage = multer.diskStorage({\n//   destination: (req, file, cb) => {\n//     cb(null, \"images\");\n//   },\n//   filename: (req, file, cb) => {\n//     cb(null, \"eric.jpg\");\n//   },\n// });\n// const upload = multer({ storage: storage });\n\n// =============================\nimport { v2 as cloudinary } from 'cloudinary';\ncloudinary.config({\n  cloud_name:\"dmdogre0f\",\n  api_key:\"295662518861996\",\n  api_secret:\"H35LhOiKccJExJLZJIJoI_o-25E\"\n});\nvar upload = multer({\n  storage: multer.diskStorage({}),\n  fileFilter: (req, file, cb) => {\n    let ext = path.extname(file.originalname);\n      if (ext !== \".JPG\" && ext !== \".JPEG\" && ext !== \".PNG\") {\n      cb(new Error(\"File type is not supported\"), false);\n      return;\n    }\n    cb(null, true);\n  },\n});\nrouter.post(\"/create\",authentication,upload.single(\"photo\"), async (req, res) => {\n  try {\n    const result = await cloudinary.uploader.upload(req.file.path);\n    // console.log(req.body,req.file);\n        const newPost = new Post({\n            photo: result.secure_url,\n            title: req.body.title,\n            desc:req.body.desc,\n            username: req.body.username,\n            categories: req.body.categories\n          })\n  \n          const savePost = await  newPost.save();\n  \n         return res.status(200).json({\n            savePost,\n          status: \"your post was successfully uploaded\"})   ;\n  \n      } catch (error) {\n        return  res.status(500).json(error)\n          \n      }\n  })\n\n//   const newPost = new Post({\n//     title: req.body.title,\n//     desc: req.body.desc, \n//     //  photo: req.body.photo,\n//     username: req.body.username,\n//     categories: req.body.categories\n//   })\n//   try {\n//     const savedPost = await newPost.save();\n//   //  const uploaded = await upload.save();\n//     res.status(200).json({\n//       savedPost,\n//     message:\"file uploaded\"});\n//   } catch (err) {\n//     res.status(500).json(err);\n//   }\n// });\n\n//UPDATE POST\nrouter.put(\"/:id\",authentication, async (req, res) => {\n  try {\n    const post = await Post.findById(req.params.id);\n    if (post.username === req.body.username) {\n      try {\n        const updatedPost = await Post.findByIdAndUpdate(\n          req.params.id,\n          {\n            $set: req.body,\n          },\n          { new: true }\n        );\n     return res.status(200).json(updatedPost);\n      } catch (err) {\n        res.status(500).json(err);\n      }\n    } else {\n      return res.status(401).json(\"You can update only your post!\");\n    }\n  } catch (err) {\n    return res.status(500).json(err);\n  }\n});\n\n//DELETE POST\nrouter.delete(\"/:id\", authentication,async (req, res) => {\n  try {\n    const post = await Post.findById(req.params.id);\n    if (post.username === req.body.username) {\n      try {\n        await post.delete();\n        return res.status(200).json(\"Post has been deleted...\");\n      } catch (err) {\n        return  res.status(500).json(err);\n      }\n    } else {\n      return res.status(401).json(\"You can delete only your post!\");\n    }\n  } catch (err) {\n    return res.status(500).json(err);\n  }\n});\n\n//GET POST\nrouter.get(\"/:id\", async (req, res) => {\n  try {\n    const post = await Post.findById(req.params.id);\n    return res.status(200).json(post);\n  } catch (err) {\n    return res.status(500).json(err);\n  }\n});\n\n//GET ALL POSTS\nrouter.get(\"/\",async (req, res) => {\n  const username = req.query.user;\n  const catName = req.query.cat;\n  try {\n    let posts;\n    if (username) {\n      posts = await Post.find({ username });\n    } else if (catName) {\n      posts = await Post.find({\n        categories: {\n          $in: [catName],\n        },\n      });\n    } else {\n      posts = await Post.find();\n    }\n    return res.status(200).json(posts);\n  } catch (err) {\n    return res.status(500).json(err);\n  }\n});\n\nexport default router;\n"],"mappings":"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"}